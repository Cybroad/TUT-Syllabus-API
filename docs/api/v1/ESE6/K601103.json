{
    "lectureCode": "K601103",
    "courseName": "プログラミング基礎(E)",
    "lecturer": [
        "天野直紀(工学部電気電子工学科)"
    ],
    "regularOrIntensive": "専門教育科目",
    "courseType": "演習科目",
    "courseStart": "2024年度前期",
    "classPeriod": [
        "金3",
        "金4"
    ],
    "targetDepartment": "工学部電気電子工学科",
    "targetGrade": [
        "2年",
        "3年",
        "4年"
    ],
    "numberOfCredits": "2",
    "classroom": [
        "講義実験棟２０１",
        "講義実験棟２０２"
    ],
    "courceDetails": {
        "courseOverview": "実際に社会で用いられる電気機器、電子機器の多くはコンピューターによる制御が行われている。したがって電気電子技術を活用するにはコンピューター制御のためのソフトウェア作成が必須である。また、近年、世界的にプログラミング教育を低学年から行う傾向がある。これはプログラミングを通じて修得できるコンピューターへの理解、論理的思考能力の獲得が重要視されているためである。これらの視点から、この授業ではプログラミングに不可欠・共通的な知識の獲得と実際にソフトウェアを作成できるスキルの獲得を行う。",
        "outcomesMeasuredBy": "プログラミングに不可欠・共通的な知識の獲得と実際にソフトウェアを作成できるスキルの獲得を行う。これを通じて「論理的な思考力」「実学に基づく専門能力」「問題解決力」「電子工学の基礎力」を身につける。具体的には以下の通り。・ソフトウェア開発の共通的な流れを説明できる。・変数、条件分岐、繰り返しといった言語に依存しない共通的な内容を説明できる。・変数、条件分岐、繰り返しについて、実際にC#言語での実装できる。・比較的簡単な構造のソフトウェアを設計・実装・検証できる。",
        "learningOutcomes": "実学に基づく専門能力論理的な思考力問題解決力",
        "teachingMethod": "毎回、取り上げるプログラミング上の技術について説明と演習を繰り返す。この授業では各自のノートPC上でC#言語を用いたプログラミング（ソフトウェア作成）に関する演習を行う。また、出席確認、資料の閲覧などにもノートPCは必須である。",
        "notices": "特にプログラミングの経験のほとんどない（1年次の実験以外に経験がない）場合には、何度も実際のプログラム作成を繰り返すことで、理解とスキル習得を行う必要がある。このため、タイピング速度が遅いと実質的な体験の機会が少なくなるのでタイピング速度を向上させておくことで学習効果を向上させることができる。",
        "preparatoryStudy": "プログラミングの基礎を学ぶため、経験の有無による差が大きく現れる傾向にある。このため1年次の実験以外でプログラミング経験がない学生は、参考書などを参照して事前に次回の内容（if。forなど）についての基本的な文法についての予習（試行）を済ませておくことを強く推奨する。講義期間中においては理解が不十分な部分は講義資料ならびにオンラインコンテンツ（講義中に紹介するpaizaラーニングなど）を用いて当該部分を復習すること。また次回講義資料を参照して予習すること。",
        "gradingGuidelines": "14回の講義を通じて行う到達度確認の結果に基づいて成績評価を行う。具体的には到達度確認（１）、到達度確認（２）、到達度確認（総合）によって評価し、その割合は20:20:50（D～A評価の判定）となる。また、加点要素として毎回の演習時間内の「授業参加」がある。ここで「授業参加」とは授業中の発言、報告などの活動のことを言う。その具体的な定義は講義中に適宜、明示する。また基準量を超えた分についてはS評価に関わる加点要素とする。",
        "textbook": "指定なし。",
        "referenceMaterials": "C#の絵本,株式会社アンク,翔泳社,4798114618",
        "courseSchedule": "第1回：はじめに。プログラミング言語とは？環境構築第2回：コーディングの仕方第3回：変数（整数、実数、四則演算、表示）第4回：条件分岐（基礎。if...else...。条件式)第5回：条件分岐（応用。elseif。true\/false)第6回：到達度確認（１）第7回：繰り返し（while）第8回：繰り返し（for）第9回：配列（基礎）第10回：配列（応用）第11回：到達度確認（２）第12回：関数（利用）第13回：関数（作成）第14回：到達度確認（総合）",
        "courseDataUpdatedAt": "2024\/01\/09"
    },
    "updateAt": "2024\/09\/13"
}