{
    "lectureCode": "GGC13701",
    "courseName": "ソフトウェア設計技法",
    "lecturer": [
        "井上亮文(コンピュータサイエンス学部コンピュータサイエンス学科)"
    ],
    "regularOrIntensive": "専門科目",
    "courseType": "講義科目",
    "courseStart": "2024年度後期",
    "classPeriod": [
        "木"
    ],
    "targetDepartment": "バイオ・情報メディア研究科博士前期課程コンピュータサイエンス専攻",
    "targetGrade": [
        "1年",
        "2年"
    ],
    "numberOfCredits": 1,
    "classroom": [
        "片柳研究所Ｅ２０３"
    ],
    "courceDetails": {
        "courseOverview": "本講義では、オブジェクト指向言語を用いてソフトウェア開発をするにあたり、より良いコードを書くために役立つ技法・ガイドラインについて横断的に紹介する。これら技法を用いたプログラムの作成を通じてITンジニアに必要なスキル（実学に基づく専門能力、論理的な思考力、分析・評価能力、問題解決能力）を養う。同時に、他の開発者との協力を前提とした開発を心がける（コミュニケーション能力）。",
        "outcomesMeasuredBy": "【最低到達目標】開発者が避けるべきコードの特徴を理解する。【上位到達目標】自身の開発において、読みやすく、保守がしやすいコードを作成できる。",
        "learningOutcomes": "実学に基づく専門能力コミュニケーション能力論理的な思考力分析・評価能力問題解決力",
        "teachingMethod": "解説と演習を織りまぜて行う。教員が解説・実演した内容を、各自が自分のノートPC上で実行する形式をとる。JavaとPythonのプログラミング環境が動作するノートPCが必須である。必要に応じてプリントを配布し、定期的に課題提出を課す。",
        "notices": "JavaとPythonの利用経験があること。クラス・メソッド・継承といった概念を理解していること。複数のソースコード間をすばやく行き来できるよう、IDEやエディタ等のツールの使い方に慣れておくこと。",
        "preparatoryStudy": "[復習]授業開始前に最低30分は前回の内容を復習しておくことが望ましい。その内容をもとに、自身で独自のプログラムを作成することを強く推奨する。[予習]各回の最後に次回講義に関連する内容を提示する。この内容を予習してくると、次回講義の理解がスムーズになる。",
        "gradingGuidelines": "(1)講義中に出される課題（40%）、(2)レポート形式の最終課題（60%）、の2種類により評価する。いずれも、ソフトウェアの設計や改善に関するものである。評価に関わるレポートのフィードバックはMoodleを経由して提供する。",
        "textbook": "授業中にプリントを配布する。",
        "referenceMaterials": "使用しない。",
        "courseSchedule": "第1回：クラスとオブジェクト第2回：望ましくないコードの特徴第3回：フォーマット・名前・コメント第4回：オブジェクトの作成第5回：オブジェクトの使用第6回：リファクタリング第7回：デザインパターン",
        "courseDataUpdatedAt": "2024/01/09"
    },
    "updateAt": "2024/09/13"
}