{
    "lectureCode": "C20901",
    "courseName": "プログラミングA2",
    "lecturer": [
        "伏見卓恭(コンピュータサイエンス学部コンピュータサイエンス学科)",
        "大野由美子(コンピュータサイエンス学部コンピュータサイエンス学科)"
    ],
    "regularOrIntensive": "専門基礎教育科目",
    "courseType": "講義・演習科目",
    "courseStart": "2024年度後期",
    "classPeriod": [
        "月4",
        "月5"
    ],
    "targetDepartment": "コンピュータサイエンス学部コンピュータサイエンス学科",
    "targetGrade": [
        "2年",
        "3年",
        "4年"
    ],
    "numberOfCredits": 3,
    "classroom": [
        "研究棟Ａ３０２",
        "研究棟Ａ３０３"
    ],
    "courceDetails": {
        "courseOverview": "本講義の前半では，Pythonの基本的な構文やデータ型に関する知識を前提に，オブジェクトの性質や関数の高度な利用法，オブジェクト指向プログラミング，デコレータやディスクリプタ，特殊変数，特殊メソッドによる汎用的なプログラミング技術について学ぶ．後半では，標準ライブラリやサードパーティのライブラリを利用して，実データを収集，抽出，格納する技術について触れる．",
        "outcomesMeasuredBy": "・リスト，辞書，タプル，集合などのオブジェクトの特性を理解し，適切かつ自由自在に活用できる（論理的な思考力）・対象のデータの構造を理解し，適切なデータ構造に格納できる（分析・評価能力）・関数の高度な利用法を理解し，自由自在に活用できる（実学に基づく専門能力，論理的な思考力）・汎用的なオブジェクト指向のプログラムを実装できる（実学に基づく専門能力，論理的な思考力）・多様なライブラリを利用した実データの処理方法を実装できる（実学に基づく専門能力）・データに対する効率的なアルゴリズムを設計できる（問題解決力，論理的な思考力）",
        "learningOutcomes": "実学に基づく専門能力論理的な思考力分析・評価能力問題解決力",
        "teachingMethod": "・各回の授業では，1コマ目に例題・練習問題を含めた講義を行い，2コマ目に演習課題に取り組み，提出，フィードバックを受けることで，講義内容の理解を深める．例題，練習問題，演習課題はノートPCによりプログラムを作成するため，ノートPCは必携である．・Pythonの開発環境としては，Anacondaによる仮想環境においてVScode上で実装，実行する．",
        "notices": "プログラミングの基礎を理解していることが望ましい．そのため，「プログラミング基礎I・II」，「プログラミングA1」を履修し単位を修得しており，プログラミングの基礎的な知識およびPythonの基本を理解していることを前提として進める．各自のパソコンにPythonの開発環境・実行環境があることを前提とする．ない場合は，インストールしておくこと．本講義では，ほぼすべてのコードをオブジェクト指向で実装するため，「プログラミング基礎II」の深い理解が前提となる．",
        "preparatoryStudy": "【受講前】「プログラミング基礎I・II」，「プログラミングA1」の内容を復習しておくこと．特に，クラスとオブジェクト，関数の定義および呼び出し方，コンテナデータ型（リスト，タプル，辞書，集合），ファイル入出力，例外処理は，ほぼ毎回の講義で当然のように出てくる概念であるため，復習してから受講すること．【各回の講義前】あらかじめ公開される講義資料に目を通し，例題プログラムを実際に動かし，練習問題を解いて臨むこと．本授業の内容は非常に高度かつ分量が多いため，予習して臨まなければ単位の修得は困難である．",
        "gradingGuidelines": "【評価方法】・各回の授業で出題する演習課題(60%)，最終回に実施するPython力チェック(40%)によって成績を決定する．（演習課題60点（2点×30題）＋Python力チェック40点）・演習課題が授業中に満点にならなかった場合は，学修支援センターを利用し，チェックをもらうこと．【フィードバック】・各回の演習課題は，授業中に完了したものはその場で採点しフィードバックを行う．授業中に完了しなかったものは宿題とする．次回講義開始時までに提出されたものは，採点でき次第Moodleに点数を記載する．これにより，受講生は常に自身の累計点数を把握できる．解答例は，次回講義開始時に公開する．・最終回のPython力チェックは，採点でき次第Moodleに点数を記載する．",
        "textbook": "授業時に配布する講義資料を用いる．",
        "referenceMaterials": "・DanBader「Pythonトリック」翔泳社(2020\/4\/15)・MichalJaworski，TarekZiade「エキスパートPythonプログラミング改訂3版」KADOKAWA(2021\/7\/30)",
        "courseSchedule": "第1回：＜復習編＞Pythonの基礎（ファイル入出力，コンテナデータ型，関数とラムダ式，コンテナのソート）第2回：＜文法編＞オブジェクト指向プログラミング（クラスとインスタンス，継承，特殊変数と特殊メソッド，例外処理）第3回：＜文法編＞関数の高度な利用法（アンパック，可変長引数，高階関数，クロージャ）第4回：＜文法編＞デコレータ（callable）第5回：＜文法編＞イテレータとジェネレータ（iterable）第6回：＜文法編＞組み込みクラスの継承とコンテナデータ型の派生，オブジェクトの同一性（mutable，hashable）第7回：＜文法編＞プロパティとディスクリプタ，抽象基底クラス第8回：＜実践編＞データ構造とアルゴリズム第9回：＜実践編＞並行処理と時間計測第10回：＜実践編＞スクレイピング１（HTTP通信，json，pickle，selenium）第11回：＜実践編＞スクレイピング２（BeautifulSoup，正規表現）第12回：＜実践編＞データベースとコンテキストマネージャ（SQLite）第13回：＜総合編＞複合問題＆まとめ第14回：＜総合編＞Python力チェック",
        "courseDataUpdatedAt": "2023\/12\/27"
    },
    "updateAt": "2024\/09\/13"
}