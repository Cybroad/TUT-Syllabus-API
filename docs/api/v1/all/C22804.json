{
    "lectureCode": "C22804",
    "courseName": "先進情報専門演習I[IT・4]",
    "lecturer": [
        "山元進(コンピュータサイエンス学部コンピュータサイエンス学科)"
    ],
    "regularOrIntensive": "専門教育科目",
    "courseType": "講義・演習科目",
    "courseStart": "2024年度後期",
    "classPeriod": [
        "木4",
        "木5"
    ],
    "targetDepartment": "コンピュータサイエンス学部コンピュータサイエンス学科",
    "targetGrade": [
        "2年",
        "3年",
        "4年"
    ],
    "numberOfCredits": 3,
    "classroom": [
        "研究棟Ａ５０２"
    ],
    "courceDetails": {
        "courseOverview": "IoTなどのネットワーク技術の進歩に伴い、世の中には大量のデータが溢れかえっている。本演習では、大量の（数値）データを処理する方法の初歩を学び、実際にプログラミングして動作させることにより技術の習得を図る。プログラミング言語にはC++を用い、スレッドを利用した並列化、プロセスを利用した並列化などの基礎を学ぶ。また、並列化タスクの粒度、などの基本的な考え方を身につける。プログラミングを通して論理的な思考力を涵養し、主に，処理の技術を修得することで、問題解決力・分析能力が身につく。",
        "outcomesMeasuredBy": "大量データを処理する方法の基礎を理解する（論理的な思考力,問題解決力,分析・評価能力）.簡単な問題に対してその知識が適用できるようになる（問題解決力,実学に基づく専門能力）。",
        "learningOutcomes": "実学に基づく専門能力論理的な思考力分析・評価能力問題解決力",
        "teachingMethod": "理論を学び，その実践としてプログラミングを行いデータの解析などを行う。",
        "notices": "必ずPC持参のこと。レポート課題は必ず期限内に提出すること．復習・予習を十分におこなうこと。",
        "preparatoryStudy": "C++を使いはするが、それほど高度な使い方はしないので、既習であるはずのPythonとの差異は必要に応じて簡単に説明する。最低限、Pythonのプログラミングで修得したことは復習しておくこと。特に、リストの取り扱いや反復処理(ループ構造)の理解は大量データの処理に対して基本中の基本である。C++未習の学生は、C++の仕様を調べておけば、学修をより進めやすくなる。",
        "gradingGuidelines": "レポートの成績70%，演習課題30%の割合で素点を100点満点に換算し、成績評価を行う。60点以上が単位認定の要件となる。なお，提出された演習課題については，次回にサンプルプログラムを公表し，レポートについては，総評を公表して，フィードバックを行う．",
        "textbook": "教科書は指定しない。講義資料をmoodleにて配布する．",
        "referenceMaterials": "指定しない",
        "courseSchedule": "第1回：CUIによるコンピュータ操作の初歩第2回：Linuxの初歩第3回：C++による簡単なprogramming第4回：processとthread第5回：並列処理の初歩第6回：threadによる並列処理第7回：dataparallelism第8回：OpenMPの初歩第9回：OpenMPを用いた並列計算1(ほぼ独立した計算の並列化)第10回：OpenMPを用いた並列計算2(リダクションのある例)第11回：行列・ベクトル積、行列・行列積の計算第12回：行列・ベクトル積の並列化第13回：行列・行列積の並列化第14回：総合演習（まとめ）",
        "courseDataUpdatedAt": "2024\/01\/09"
    },
    "updateAt": "2024\/09\/13"
}